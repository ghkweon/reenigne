C++ keywords we've reserved

break
case
catch
continue
default
delete
do
else
false
for
goto
if
new
return
switch
this
throw
true
try
while


non-C++ keywords we've reserved

assembly
done
elseIf
elseUnless
finally
from
forever
in
nothing
null
unless
until


Type keywords we've reserved

Auto
Bit
Boolean
Byte
Character
Class
Complex
DInt
DUInt
DWord
Fixed
Float
HInt
HUInt
HWord
Int
Integer
QInt
QUInt
QWord
Rational
String
TypeOf
UInt
Unsigned
Void
Word
WordString


C++ keywords that I'm not sure what we'll do with yet

dynamic_cast      dynamicCast
enum
const
const_cast        constCast
explicit
extern
friend
mutable
namespace
operator
private
protected
public
reinterpret_cast  reinterpretCast
sizeof
static
static_cast       staticCast
struct
template
typeid
union
using
virtual
volatile


Fixed size type keywords we expect to reserve

Float128
Float16
Float32
Float64
FloatF16
FloatF32
FloatF64
Int1
Int2
Int4
Int8
Int16
Int32
Int64
Int128
Int256
Int512
IntF1
IntF2
IntF4
IntF8
IntF16
IntF32
IntF64
IntF128
IntF256
UInt1
UInt2
UInt4
UInt8
UInt16
UInt32
UInt64
UInt128
UInt256
UInt512
UIntF1
UIntF2
UIntF4
UIntF8
UIntF16
UIntF32
UIntF64
UIntF128
UIntF256
Word1
Word2
Word4
Word8
Word16
Word32
Word64
Word128
Word256
Word512
WordF1
WordF2
WordF4
WordF8
WordF16
WordF32
WordF64
WordF128
WordF256


C++ operator equivalents we won't reserve

and
and_eq
bitand
bitor
compl
not
not_eq
or
or_eq
xor
xor_eq


C++ type keywords we won't reserve (some have equivalents though)

auto
bool
char
class
double
float
int
long
short
signed
unsigned
void
wchar_t


C++ optimization related keywords we won't reserve

inline
register


C++ syntax related keywords we won't reserve

typedef
typename


C++ keywords we've changed the spelling of

asm               assembly



