Assume binary arithmetic
Assume 8-bit bytes
A register is a sequence of contiguous bytes in the register file, or a concatenation of smaller registers
A register class is a set of registers that are interchangeable for some particular instruction pattern, so that a pattern doesn't have to be duplicated for each set of registers it can be used with

What things does the compiler need to know about each instruction pattern?
  Number of register/constant holes
  Class of each register/constant hole
  How the pattern looks in assembly
  How the pattern is assembled as instruction bytes (and relocations, if targetting an object file format)
  What the pattern does as ALFE code

How should we pass instruction pattern details to MachineDescription.addInstructionPattern()?
  String for function signature
  String for assembly function body
  String for binary function body
  String for ALFE function body

Target flags:
  e.g. only8086 for conditional jump opcodes 60-6f
  Also used for whether undefine() or the actual behavior is specified

How can timing information be specified?
  Have some hidden registers which control timing, including a special "current time" register
  An instruction pattern can set timing registers based on operands and previous timing register values

